@addTagHelper *, OnlineStore
@model OnlineStore.Models.ViewModels.ProductsListViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>


<form method="get">
    <div>
        <label>
            Title
        </label>
        <input name="title" value="@Model.FilteringViewModel.Title" />

        <label>
            Category
        </label>
        <select id="categories" name="category" asp-items="@ViewData["Categories"] as SelectList">
            <option disabled selected></option>
        </select>

        <input type="hidden" name="sort" id="sortingInput"/>
        <input type="submit" value="Apply" />
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sort="@Model.SortingViewModel.TitleSort" asp-route-page="@(Model.PaginationViewModel.CurrentPageNumber)" asp-route-title="@Model.FilteringViewModel.Title" asp-route-category="@Model.FilteringViewModel.Category">Title</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sort="@Model.SortingViewModel.PriceSort" asp-route-page="@(Model.PaginationViewModel.CurrentPageNumber)" asp-route-title="@Model.FilteringViewModel.Title" asp-route-category="@Model.FilteringViewModel.Category">Price</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sort="@Model.SortingViewModel.CategorySort" asp-route-page="@(Model.PaginationViewModel.CurrentPageNumber)" asp-route-title="@Model.FilteringViewModel.Title" asp-route-category="@Model.FilteringViewModel.Category">Category</a>
                </th> 
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach ( var item in Model.Result ) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Title)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <div>
                @if(Model.PaginationViewModel.HasPrevPage) {
                    <a asp-action="Index" asp-route-page="@(Model.PaginationViewModel.CurrentPageNumber-1)" asp-route-sort="@Model.SortingViewModel.CurrentSort" asp-route-title="@Model.FilteringViewModel.Title" asp-route-category="@Model.FilteringViewModel.Category">Prev</a>
                }
                
                @for ( int i = 0; i < Model.PaginationViewModel.TotalPageCount; i++ ) {
                    <a class="pagination-link @(@Model.PaginationViewModel.CurrentPageNumber==i+1?"current":"")" asp-action="Index" asp-route-page="@(i+1)" asp-route-sort="@Model.SortingViewModel.CurrentSort" asp-route-title="@Model.FilteringViewModel.Title" asp-route-category="@Model.FilteringViewModel.Category" >@(i+1)</a>
                }

                @if ( Model.PaginationViewModel.HasNextPage ) {
                    <a asp-action="Index" asp-route-page="@(Model.PaginationViewModel.CurrentPageNumber+1)" asp-route-sort="@Model.SortingViewModel.CurrentSort" asp-route-title="@Model.FilteringViewModel.Title" asp-route-category="@Model.FilteringViewModel.Category">Next</a>
                }
            </div>
        </tfoot>
    </table>
</form>
